// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.0
// source: restaurant/restaurant.proto

package restaurant

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// RestaurantServiceClient is the client API for RestaurantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RestaurantServiceClient interface {
	AddRestaurant(ctx context.Context, in *AddRestaurantRequest, opts ...grpc.CallOption) (*AddRestaurantResponse, error)
	UpdateRestaurant(ctx context.Context, in *UpdateRestaurantRequest, opts ...grpc.CallOption) (*UpdateRestaurantResponse, error)
	AddRestaurantItem(ctx context.Context, in *AddRestaurantItemRequest, opts ...grpc.CallOption) (*AddRestaurantItemResponse, error)
	UpdateRestaurantItem(ctx context.Context, in *UpdateRestaurantItemRequest, opts ...grpc.CallOption) (*UpdateRestaurantItemResponse, error)
	GetAllRestaurantItems(ctx context.Context, in *GetAllRestaurantItemsRequest, opts ...grpc.CallOption) (*GetAllRestaurantItemsResponse, error)
	GetAllRestaurants(ctx context.Context, in *GetAllRestaurantsRequest, opts ...grpc.CallOption) (*GetAllRestaurantsResponse, error)
	DeleteRestaurantItem(ctx context.Context, in *DeleteRestaurantItemRequest, opts ...grpc.CallOption) (*DeleteRestaurantItemResponse, error)
	GetRestaurantsByCity(ctx context.Context, in *GetRestaurantsByCityRequest, opts ...grpc.CallOption) (*GetRestaurantsByCityResponse, error)
	GetRestaurantsByItemCategory(ctx context.Context, in *GetRestaurantsByItemCategoryRequest, opts ...grpc.CallOption) (*GetRestaurantsByItemCategoryResponse, error)
}

type restaurantServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestaurantServiceClient(cc grpc.ClientConnInterface) RestaurantServiceClient {
	return &restaurantServiceClient{cc}
}

func (c *restaurantServiceClient) AddRestaurant(ctx context.Context, in *AddRestaurantRequest, opts ...grpc.CallOption) (*AddRestaurantResponse, error) {
	out := new(AddRestaurantResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/AddRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) UpdateRestaurant(ctx context.Context, in *UpdateRestaurantRequest, opts ...grpc.CallOption) (*UpdateRestaurantResponse, error) {
	out := new(UpdateRestaurantResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/UpdateRestaurant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) AddRestaurantItem(ctx context.Context, in *AddRestaurantItemRequest, opts ...grpc.CallOption) (*AddRestaurantItemResponse, error) {
	out := new(AddRestaurantItemResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/AddRestaurantItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) UpdateRestaurantItem(ctx context.Context, in *UpdateRestaurantItemRequest, opts ...grpc.CallOption) (*UpdateRestaurantItemResponse, error) {
	out := new(UpdateRestaurantItemResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/UpdateRestaurantItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetAllRestaurantItems(ctx context.Context, in *GetAllRestaurantItemsRequest, opts ...grpc.CallOption) (*GetAllRestaurantItemsResponse, error) {
	out := new(GetAllRestaurantItemsResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/GetAllRestaurantItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetAllRestaurants(ctx context.Context, in *GetAllRestaurantsRequest, opts ...grpc.CallOption) (*GetAllRestaurantsResponse, error) {
	out := new(GetAllRestaurantsResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/GetAllRestaurants", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) DeleteRestaurantItem(ctx context.Context, in *DeleteRestaurantItemRequest, opts ...grpc.CallOption) (*DeleteRestaurantItemResponse, error) {
	out := new(DeleteRestaurantItemResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/DeleteRestaurantItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetRestaurantsByCity(ctx context.Context, in *GetRestaurantsByCityRequest, opts ...grpc.CallOption) (*GetRestaurantsByCityResponse, error) {
	out := new(GetRestaurantsByCityResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/GetRestaurantsByCity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *restaurantServiceClient) GetRestaurantsByItemCategory(ctx context.Context, in *GetRestaurantsByItemCategoryRequest, opts ...grpc.CallOption) (*GetRestaurantsByItemCategoryResponse, error) {
	out := new(GetRestaurantsByItemCategoryResponse)
	err := c.cc.Invoke(ctx, "/proto.RestaurantService/GetRestaurantsByItemCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestaurantServiceServer is the server API for RestaurantService service.
// All implementations must embed UnimplementedRestaurantServiceServer
// for forward compatibility
type RestaurantServiceServer interface {
	AddRestaurant(context.Context, *AddRestaurantRequest) (*AddRestaurantResponse, error)
	UpdateRestaurant(context.Context, *UpdateRestaurantRequest) (*UpdateRestaurantResponse, error)
	AddRestaurantItem(context.Context, *AddRestaurantItemRequest) (*AddRestaurantItemResponse, error)
	UpdateRestaurantItem(context.Context, *UpdateRestaurantItemRequest) (*UpdateRestaurantItemResponse, error)
	GetAllRestaurantItems(context.Context, *GetAllRestaurantItemsRequest) (*GetAllRestaurantItemsResponse, error)
	GetAllRestaurants(context.Context, *GetAllRestaurantsRequest) (*GetAllRestaurantsResponse, error)
	DeleteRestaurantItem(context.Context, *DeleteRestaurantItemRequest) (*DeleteRestaurantItemResponse, error)
	GetRestaurantsByCity(context.Context, *GetRestaurantsByCityRequest) (*GetRestaurantsByCityResponse, error)
	GetRestaurantsByItemCategory(context.Context, *GetRestaurantsByItemCategoryRequest) (*GetRestaurantsByItemCategoryResponse, error)
	mustEmbedUnimplementedRestaurantServiceServer()
}

// UnimplementedRestaurantServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRestaurantServiceServer struct {
}

func (UnimplementedRestaurantServiceServer) AddRestaurant(context.Context, *AddRestaurantRequest) (*AddRestaurantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRestaurant not implemented")
}
func (UnimplementedRestaurantServiceServer) UpdateRestaurant(context.Context, *UpdateRestaurantRequest) (*UpdateRestaurantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRestaurant not implemented")
}
func (UnimplementedRestaurantServiceServer) AddRestaurantItem(context.Context, *AddRestaurantItemRequest) (*AddRestaurantItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRestaurantItem not implemented")
}
func (UnimplementedRestaurantServiceServer) UpdateRestaurantItem(context.Context, *UpdateRestaurantItemRequest) (*UpdateRestaurantItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRestaurantItem not implemented")
}
func (UnimplementedRestaurantServiceServer) GetAllRestaurantItems(context.Context, *GetAllRestaurantItemsRequest) (*GetAllRestaurantItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRestaurantItems not implemented")
}
func (UnimplementedRestaurantServiceServer) GetAllRestaurants(context.Context, *GetAllRestaurantsRequest) (*GetAllRestaurantsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRestaurants not implemented")
}
func (UnimplementedRestaurantServiceServer) DeleteRestaurantItem(context.Context, *DeleteRestaurantItemRequest) (*DeleteRestaurantItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRestaurantItem not implemented")
}
func (UnimplementedRestaurantServiceServer) GetRestaurantsByCity(context.Context, *GetRestaurantsByCityRequest) (*GetRestaurantsByCityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRestaurantsByCity not implemented")
}
func (UnimplementedRestaurantServiceServer) GetRestaurantsByItemCategory(context.Context, *GetRestaurantsByItemCategoryRequest) (*GetRestaurantsByItemCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRestaurantsByItemCategory not implemented")
}
func (UnimplementedRestaurantServiceServer) mustEmbedUnimplementedRestaurantServiceServer() {}

// UnsafeRestaurantServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RestaurantServiceServer will
// result in compilation errors.
type UnsafeRestaurantServiceServer interface {
	mustEmbedUnimplementedRestaurantServiceServer()
}

func RegisterRestaurantServiceServer(s grpc.ServiceRegistrar, srv RestaurantServiceServer) {
	s.RegisterService(&RestaurantService_ServiceDesc, srv)
}

func _RestaurantService_AddRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/AddRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddRestaurant(ctx, req.(*AddRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_UpdateRestaurant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRestaurantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).UpdateRestaurant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/UpdateRestaurant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).UpdateRestaurant(ctx, req.(*UpdateRestaurantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_AddRestaurantItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRestaurantItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).AddRestaurantItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/AddRestaurantItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).AddRestaurantItem(ctx, req.(*AddRestaurantItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_UpdateRestaurantItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRestaurantItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).UpdateRestaurantItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/UpdateRestaurantItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).UpdateRestaurantItem(ctx, req.(*UpdateRestaurantItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetAllRestaurantItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRestaurantItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetAllRestaurantItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/GetAllRestaurantItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetAllRestaurantItems(ctx, req.(*GetAllRestaurantItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetAllRestaurants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllRestaurantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetAllRestaurants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/GetAllRestaurants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetAllRestaurants(ctx, req.(*GetAllRestaurantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_DeleteRestaurantItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRestaurantItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).DeleteRestaurantItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/DeleteRestaurantItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).DeleteRestaurantItem(ctx, req.(*DeleteRestaurantItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetRestaurantsByCity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRestaurantsByCityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetRestaurantsByCity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/GetRestaurantsByCity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetRestaurantsByCity(ctx, req.(*GetRestaurantsByCityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RestaurantService_GetRestaurantsByItemCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRestaurantsByItemCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestaurantServiceServer).GetRestaurantsByItemCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RestaurantService/GetRestaurantsByItemCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestaurantServiceServer).GetRestaurantsByItemCategory(ctx, req.(*GetRestaurantsByItemCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RestaurantService_ServiceDesc is the grpc.ServiceDesc for RestaurantService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RestaurantService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RestaurantService",
	HandlerType: (*RestaurantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRestaurant",
			Handler:    _RestaurantService_AddRestaurant_Handler,
		},
		{
			MethodName: "UpdateRestaurant",
			Handler:    _RestaurantService_UpdateRestaurant_Handler,
		},
		{
			MethodName: "AddRestaurantItem",
			Handler:    _RestaurantService_AddRestaurantItem_Handler,
		},
		{
			MethodName: "UpdateRestaurantItem",
			Handler:    _RestaurantService_UpdateRestaurantItem_Handler,
		},
		{
			MethodName: "GetAllRestaurantItems",
			Handler:    _RestaurantService_GetAllRestaurantItems_Handler,
		},
		{
			MethodName: "GetAllRestaurants",
			Handler:    _RestaurantService_GetAllRestaurants_Handler,
		},
		{
			MethodName: "DeleteRestaurantItem",
			Handler:    _RestaurantService_DeleteRestaurantItem_Handler,
		},
		{
			MethodName: "GetRestaurantsByCity",
			Handler:    _RestaurantService_GetRestaurantsByCity_Handler,
		},
		{
			MethodName: "GetRestaurantsByItemCategory",
			Handler:    _RestaurantService_GetRestaurantsByItemCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "restaurant/restaurant.proto",
}
